"""empty message

Revision ID: 81fcb52022a2
Revises: 
Create Date: 2022-10-12 19:34:20.890320

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '81fcb52022a2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('firstname', sa.String(length=50), nullable=True),
    sa.Column('lastname', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('employee_position', sa.Enum('brewer', 'assistant', 'admin', name='profession'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('yeasts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('cycles', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tank',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('title', sa.Enum('kellerbier', 'dunkelbier', 'bropils', 'wheatbeer', 'traditional_dark', 'traditional_light', 'traditional_wheat', 'cider', name='titlebeer'), nullable=False),
    sa.Column('yeasts_id', sa.Integer(), nullable=True),
    sa.Column('expected_volume', sa.Integer(), nullable=False),
    sa.Column('actual_volume', sa.Integer(), nullable=True),
    sa.Column('beer_grooving', sa.Boolean(), nullable=True),
    sa.Column('cooling', sa.Boolean(), nullable=True),
    sa.Column('brew_number_first', sa.Integer(), nullable=False),
    sa.Column('brew_number_last', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['yeasts_id'], ['yeasts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number')
    )
    op.create_index(op.f('ix_tank_yeasts_id'), 'tank', ['yeasts_id'], unique=False)
    op.create_table('measuring',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=False),
    sa.Column('density', sa.Float(), nullable=False),
    sa.Column('pressure', sa.Float(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=False),
    sa.Column('comment', sa.String(length=300), nullable=True),
    sa.Column('tank_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tank_id'], ['tank.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_measuring_tank_id'), 'measuring', ['tank_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_measuring_tank_id'), table_name='measuring')
    op.drop_table('measuring')
    op.drop_index(op.f('ix_tank_yeasts_id'), table_name='tank')
    op.drop_table('tank')
    op.drop_table('yeasts')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
